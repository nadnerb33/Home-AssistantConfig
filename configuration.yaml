homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/London
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
#introduction:

# Enables the frontend
frontend:


# Enables configuration UI
config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  api_password: !secret http_password
  ssl_certificate: !secret ssl_certificate 
  ssl_key: !secret ssl_key
  base_url: !secret base_url 
  ip_ban_enabled: true
  login_attempts_threshold: 3

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:
  # ditch a bunch of stuff from here

# Enables a map showing the location of tracked devices
map:

device_tracker:
  - platform: bluetooth_tracker
  - platform: sky_hub
    host: 192.168.0.100
  # - platform: google_maps
  #   username: !secret username
  #   password: !secret password


nest:
  client_id: !secret client_id
  client_secret: !secret client_secret

light:
  - platform: hyperion
    host: 192.168.0.33
    default_color: [255,0,255]

binary_sensor:
    platform: rpi_gpio
    ports:
      12: pibutton #number on pi case
    value_high: "On"
    value_low: "Off"
    invert_logic: true

shell_command:
  play_youtube_chromecast: 'curl -H "Content-Type: application/json" http://192.168.0.8:8008/apps/YouTube -X POST -d v={{video}}'
  renew_ssl: /config/dehydrated/dehydrated -c
  update_duckdns: !secret update_duckdns
  #ssh because ps4-waker is installed outside of docker 
  # switch_on_ps4:  ssh osmc@192.168.0.33 'ps4-waker -c /home/osmc/homeassistant/ps4-wake.credentials.json -d 192.168.0.44 -t 5000'
  # switch_off_ps4: ssh osmc@192.168.0.33 'ps4-waker -c /home/osmc/homeassistant/ps4-wake.credentials.json -d 192.168.0.44 -t 5000 standby'
  switch_on_ps4:  ps4-waker -c /config/.ps4-wake.credentials.json -d 192.168.0.44 -t 5000
  switch_off_ps4: ps4-waker -c /config/.ps4-wake.credentials.json -d 192.168.0.44 -t 5000 standby
  start_ps4_app: 'ps4-waker -c /config/.ps4-wake.credentials.json -d 192.168.0.44 -t 5000 start {{ app_id }}'

#could get this working if you add an SSH command beforehand, or install within docker
#   turn_off_pi_usb: sudo /home/homeassistant/uhubctl/uhubctl -a off -p 2
#   turn_on_pi_usb: sudo /home/homeassistant/uhubctl/uhubctl -a on -p 2

hdmi_cec:
  devices:
    tv: 0.0.0.0
    rxv: 2.0.0.0

google_assistant:
  project_id: !secret project_id
  api_key: !secret api_key
  exposed_domains:
    - switch
    - script
    - light
  entity_config:
    script.play_ps4:
      name: Play PS4
      expose: true
    script.watch_kodi:
      name: Watch Kodi
      expose: true
    light.hyperion:
      name: Hyperion
      expose: true
    script.update_kodi_library:
      name: Update Kodi
      expose: false

# Text to speech
tts:
  - platform: google

# Cloud
cloud:

media_player: !include media_players.yaml
sensor: !include sensors.yaml
switch: !include switches.yaml
# group: !include groups.yaml
automation: !include automations.yaml
script: !include_dir_named scripts
panel_iframe: !include panels.yaml
